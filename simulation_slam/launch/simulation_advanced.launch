<?xml version="1.0"?>
<!-- -->
<launch>

  <!-- Load Gazebo world -->
  <include file="$(find simulation_world)/launch/gazebo_rviz.launch">
    <arg name="launch_rviz" value="false"/>
    <arg name="world_name"  value="terrain_1.world"/>
  </include>

  <!-- SLAM ARGUMENTS -->
  <arg name="camera"                    default="realsense"/>
  <arg name="frame_id"                  default="base_footprint"/>
  <!-- Point Cloud filtering -->
  <arg name="cloud_noise_filtering_radius"  default="0.08"/>
  <arg name="cloud_noise_filtering_min_neighbors"  default="5"/>
  <!-- Obstacle detection -->
  <arg name="proj_min_cluster_size"     default="20"/>
  <arg name="proj_max_ground_angle"     default="15"/>
  <arg name="proj_max_ground_height"    default="0.1"/>
  <arg name="proj_max_height_default"   default="1.2"/>
  <arg name="proj_max_height_rolling"   default="0.8"/>
  <arg name="proj_max_height_crawling"  default="0.5"/>

  <!-- Grid parameters -->
  <arg name="grid_resolution"           default="$(eval arg('cloud_noise_filtering_radius')/2)"/>
  <arg name="grid_size_meters"          default="40"/>

   <!-- SLAM -->
  <include file="$(find simulation_slam)/launch/rtabmap_advanced.launch">
    <arg name="frame_id"                            value="$(arg frame_id)"/>
    <arg name="rtabmap_args"                        value="--delete_db_on_start"/>
    <arg name="camera_info_topic"                   value="/$(arg camera)/color/camera_info"/>
    <arg name="depth_camera_info_topic"             value="/$(arg camera)/depth/camera_info"/>
    <arg name="rgb_topic"                           value="/$(arg camera)/color/image_raw"/>
    <arg name="depth_topic"                         value="/$(arg camera)/depth/image_rect_raw"/>
    <arg name="rviz"                                value="true"/>
    <arg name="rviz_cfg"                            value="$(find simulation_world)/rviz/m4_slam.rviz"/>
    <arg name="rtabmap_viz"                         value="false"/>
    <arg name="approx_sync_max_interval"            value="0.02"/>  <!-- To remove estimations based on rgb and depth shifted in time -->
    <!-- <arg name="odom_topic"                          value="/$(arg camera)/imu"/> -->
    <arg name="GridCellSize"                        value="$(arg grid_resolution)"/>
    <arg name="grid_size"                           value="$(arg grid_size_meters)"/>    <!-- 50 meters wide -->
    <arg name="OdomStrategy"                        value="1"/>
    <arg name="VisCorType"                          value="1"/>
    <arg name="OdomF2MMaxSize"                      value="1000"/>  <!-- reduced maximum features map size-->
    <arg name="VisMaxFeatures"                      value="600"/>   <!-- reduced maximum features extracted by image-->
    <arg name="RtabmapStartNewMapOnLoopClosure"     value="false"/>
    <arg name="RegForce3DoF"                        value="true"/>
    <arg name="OptimizerSlam2D"                     value="true"/>
    <arg name="cloud_noise_filtering_radius"        value="$(arg cloud_noise_filtering_radius)"/>
    <arg name="cloud_noise_filtering_min_neighbors" value="$(arg cloud_noise_filtering_min_neighbors)"/>
    <arg name="proj_max_ground_angle"               value="$(arg proj_max_ground_angle)"/>
    <arg name="proj_max_ground_height"              value="$(arg proj_max_ground_height)"/>
    <arg name="proj_max_height"                     value="$(arg proj_max_height_default)"/>
    <arg name="proj_min_cluster_size"               value="$(arg proj_min_cluster_size)"/>
  </include>

  <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />

  <!-- Launch passthrough filter nodes at specific height -->
  <node pkg="nodelet" type="nodelet" name="passthrough" args="load pcl/PassThrough pcl_manager" output="screen">
    <remap from="~input" to="rtabmap/cloud_obstacles" />
    <remap from="~output" to="crawl_detect_cloud" />
    <param name="filter_field_name" type="str" value="z"/>
    <param name="filter_limit_min" type="double" value="$(arg proj_max_ground_height)"/>
    <param name="filter_limit_max" type="double" value="$(arg proj_max_height_crawling)"/>
    <param name="filter_limit_negative" type="bool" value="false"/>
  </node>

  <node pkg="nodelet" type="nodelet" name="passthrough2" args="load pcl/PassThrough pcl_manager" output="screen">
    <remap from="~input" to="rtabmap/cloud_obstacles" />
    <remap from="~output" to="roll_detect_cloud" />
    <param name="filter_field_name" type="str" value="z"/>
    <param name="filter_limit_min" type="double" value="$(arg proj_max_ground_height)"/>
    <param name="filter_limit_max" type="double" value="$(arg proj_max_height_rolling)"/>
    <param name="filter_limit_negative" type="bool" value="false"/>
  </node>

  <!-- Launch gridmap nodes -->
  <node name="pointCloud2GridMap_node" pkg="simulation_slam" type="pointCloud2GridMap_node.py" output="screen">
    <param name="input_cloud"      value="/crawl_detect_cloud"/>
    <param name="output_map"      value="crawl_grid_map"/>
    <param name="grid_resolution"      value="$(arg grid_resolution)"/>
    <param name="grid_size_meters"     value="$(arg grid_size_meters)"/>
  </node>

  <node name="pointCloud2GridMap_node2" pkg="simulation_slam" type="pointCloud2GridMap_node.py" output="screen">
    <param name="input_cloud"      value="/roll_detect_cloud"/>
    <param name="output_map"      value="roll_grid_map"/>
    <param name="grid_resolution"      value="$(arg grid_resolution)"/>
    <param name="grid_size_meters"     value="$(arg grid_size_meters)"/>
  </node>
  
  <node name="cost_map_node" pkg="simulation_slam" type="cost_map_node.py" output="screen">
    <param name="input_grid1"      value="/crawl_grid_map"/>
    <param name="input_grid2"      value="/roll_grid_map"/>
    <param name="grid_cost1"      value="1.0"/>
    <param name="grid_cost2"      value="0.5"/>
    <param name="output_grid"      value="/merged_occupancy_grid"/>
  </node>



</launch>